version: 2.1
jobs:
  build:
    docker: 
      - image: innovanon/poobuntu-ci:latest
    parallelism: 4
    steps:
      #- checkout # check out the code in the project directory
      - run:
          command: |
            set -exu
            echo -e "$GPG_KEY" | gpg --import
      - run:
          command: |
            set -exu
            #git clone --depth=1 --recursive https://github.com/InnovAnon-Inc/${CIRCLE_PROJECT_REPONAME}.git
            git clone --recursive https://github.com/InnovAnon-Inc/${CIRCLE_PROJECT_REPONAME}.git
            cd                                                               ${CIRCLE_PROJECT_REPONAME}
            OLDDIR=$PWD
            PACKAGE=${CIRCLE_PROJECT_REPONAME,,}

            [ ! -z "`git tag`" ] || git tag v1.0

            revisioncount=`git log --oneline | wc -l`
            #projectversion=`git describe --tags --long`
            #cleanversion=${projectversion%%-*}
            #cleanversion=`git describe --tags --long | grep -o '^[^-]*'`
            git describe --tags --long | grep -o '^v[^.]*\.[^.-]*' || git tag v1.0
            cleanversion="`git describe --tags --long | grep -o '^v[^.]*\.[^.-]*' | sed s/^v//`"
            VERSION="$cleanversion.$revisioncount"

            mkdir -pv /tmp/build/${PACKAGE}/${VERSION}
            cp -vr .  /tmp/build/${PACKAGE}/${VERSION}/${PACKAGE}-${VERSION}
            cd        /tmp/build/${PACKAGE}/${VERSION}/${PACKAGE}-${VERSION}
            ./autogen.sh
            rm -v autogen.sh
            find . -name configure.ac -delete
            tar --exclude-vcs --exclude-vcs-ignores -I'pixz -9ep'`nproc` -cf \
                                                    ../${PACKAGE}-${VERSION}.tar.xz .
            # TODO test change
            #./configure
            #make

            # debianize source package
            DEBFULLNAME='InnovAnon, Inc. (Ministries)'     \
            dh_make                                        \
              --email         InnovAnon-Inc@protonmail.com \
              --copyright     mit                          \
              --docs                                       \
              --library -y --createorig
            sed -i 's/BROKEN/1/g'                    debian/control
            sed -i 'd#^usr/share/pkgconfig/\*$#'     debian/${PACKAGE}-dev.install
            echo 'usr/lib/*/pkgconfig/*'          >> debian/${PACKAGE}-dev.install
            echo 'usr/include/*'                  >> debian/${PACKAGE}-dev.install
            if grep -q 'lib_LTLIBRARIES +=' src/Makefile.am ; then
              echo 'usr/lib/*/*.so*'              >> debian/${PACKAGE}1.install
              echo 'usr/lib/*/*.a*'               >> debian/${PACKAGE}1.install
            else
              sed -i 'd#^usr/lib/\*/lib\*\.so\.\*$#' debian/${PACKAGE}1.install
            fi
            if grep -q 'bin_PROGRAMS +=' src/Makefile.am ; then
              echo 'usr/bin/*'                    >> debian/${PACKAGE}1.install
            fi
            if [ $PACKAGE = yacs ] ; then
              echo 'bin/*'                        >> debian/${PACKAGE}1.install
            fi
            if [ -e doxygen.cfg ] ; then
              echo 'doxygen-doc/man/man1/*'       >> debian/manpages

              sed -e '/Format.*sgml/d' \
                  -e '/Files:.*sgml/d' \
                  -e '/Format.*text/d' \
                  -e '/Files:.*text/d' \
                  debian/${PACKAGE}.doc-base.EX   >> debian/${PACKAGE}.doc-base
            fi

            # build debian package
            dpkg-buildpackage         \
              --root-command=fakeroot \
              --compression-level=9   \
              --compression=xz        \
              --sign-key=53F31F9711F06089\!
              #--sign-key=38BBDB7C15E81F38AAF6B7E614F31DFAC260053E

            # release artifacts
            cd        /tmp/build/${PACKAGE}/${VERSION}
            #mkdir -v tmp
            #mv -v *.buildinfo *.changes *.dsc *.deb ${PACKAGE}-${VERSION}.tar.xz tmp
            #mv -v *.buildinfo *.changes *.dsc *.deb *.tar.xz tmp
            #mv -v *.buildinfo *.changes *.dsc *.deb tmp
            #~/go/bin/ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete v${VERSION} tmp
            #~/go/bin/ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete -replace v${VERSION} tmp
            #~/go/bin/ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -soft v${VERSION} tmp
            #~/go/bin/ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} v${VERSION} tmp
            #ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} v${VERSION} /tmp/build/${PACKAGE}/${VERSION}/${PACKAGE}-${VERSION}.tar.xz
            #ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete v${VERSION} /tmp/build/${PACKAGE}/${VERSION}/${PACKAGE}-${VERSION}.tar.xz

            cd $OLDDIR
            #git config --global user.email 'InnovAnon-Inc@protonmail.com'
            #git config --global user.name  'CircleCI'
            git remote set-url origin https://github.com:${GITHUB_TOKEN}@github.com/InnovAnon-Inc/${CIRCLE_PROJECT_REPONAME}.git
            git tag v$VERSION
            git push
            git push --tags

            github-release release --security-token $GITHUB_TOKEN --user $CIRCLE_PROJECT_USERNAME --repo $CIRCLE_PROJECT_REPONAME \
              --tag v$VERSION

            github-release upload  --security-token $GITHUB_TOKEN --user $CIRCLE_PROJECT_USERNAME --repo $CIRCLE_PROJECT_REPONAME \
              --tag v$VERSION --name 'source package' --file /tmp/build/${PACKAGE}/${VERSION}/${PACKAGE}-${VERSION}.tar.xz

            curl --data '{"tag_name": "'v$VERSION'","target_commitish": "master","name": "'v$VERSION'","body": "Release of version '$VERSION'","draft": false,"prerelease": false}' https://api.github.com/repos/InnovAnon-Inc/$CIRCLE_PROJECT_REPONAME/releases?access_token=$GITHUB_TOKEN

            # TODO dupload debs and friends

      #- store_artifacts:
      #    path: /tmp/build/${PACKAGE}/${VERSION}/${PACKAGE}-${VERSION}.tar.xz
      #- store_artifacts:
      #    path: /tmp/build/${PACKAGE}/${VERSION}/${PACKAGE}_${VERSION}-1_amd64.deb
      #- store_artifacts:
      #    path: /tmp/build/${PACKAGE}/${VERSION}/${PACKAGE}-dev_${VERSION}-1_amd64.deb
      #- store_artifacts:
      #    path: /tmp/build/${PACKAGE}/${VERSION}/${PACKAGE}-doc_${VERSION}-1_all.deb
      #- store_artifacts:
      #    path: /tmp/build/${PACKAGE}/${VERSION}/${PACKAGE}_${VERSION}-1.dsc
      #- store_artifacts:
      #    path: /tmp/build/${PACKAGE}/${VERSION}/${PACKAGE}_${VERSION}-1_amd64.changes
      #- store_artifacts:
      #    path: /tmp/build/${PACKAGE}/${VERSION}/${PACKAGE}_${VERSION}-1_amd64.buildinfo
      #- store_artifacts:
      #    path: /tmp/build/${PACKAGE}/${VERSION}/${PACKAGE}_${VERSION}-1.debian.tar.xz
      #- store_artifacts:
      #    path: /tmp/build/${PACKAGE}/${VERSION}/${PACKAGE}_${VERSION}.orig.tar.xz

